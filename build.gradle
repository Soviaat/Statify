plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '8.0.0'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()
	google()
}

configurations {
	shadowImplementation {
	canBeResolved = true
	canBeConsumed = false
	extendsFrom implementation
	}
}

shadowJar {
	archiveClassifier.set('dev-shadow')
	configurations = [project.configurations.shadowImplementation]
	mergeServiceFiles()
}

fabricApi {
	configureDataGeneration()
}

tasks {
	remapJar {
		archiveBaseName.set(project.archives_base_name)

		// Dynamically set the version using properties from gradle.properties
		archiveVersion.set("${project.minecraft_version}-${project.loader_version}-fabric")


		inputFile.set(shadowJar.archiveFile)
		archiveClassifier.set('')
	}

	build {
		dependsOn(remapJar)
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	implementation 'com.google.api-client:google-api-client:2.6.0'                   exclude module: 'httpclient'
	implementation 'com.google.apis:google-api-services-sheets:v4-rev20240708-2.0.0' exclude module: 'httpclient'
	implementation 'com.google.apis:google-api-services-oauth2:v2-rev20200213-2.0.0' exclude module: 'httpclient'
	implementation 'com.google.oauth-client:google-oauth-client:1.36.0'
	implementation 'com.google.code.gson:gson:2.11.0'                                exclude module: 'httpclient'
	implementation 'com.google.auth:google-auth-library-credentials:1.24.0'
	implementation 'io.github.cdimascio:java-dotenv:5.2.2'

	include 'com.google.api-client:google-api-client:2.6.0'
	include 'com.google.apis:google-api-services-sheets:v4-rev20240708-2.0.0'
	include 'com.google.apis:google-api-services-oauth2:v2-rev20200213-2.0.0'
	include 'com.google.oauth-client:google-oauth-client:1.36.0'
	include 'com.google.code.gson:gson:2.11.0'
	include 'com.google.auth:google-auth-library-credentials:1.24.0'
	include 'io.github.cdimascio:java-dotenv:5.2.2'
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	setArchiveBaseName(project.archives_base_name)
	setArchiveVersion("${project.minecraft_version}-${project.loader_version}-fabric")
	from("LICENSE")
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}